import org.yaml.snakeyaml.Yaml

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.yaml:snakeyaml:2.2')
    }
}

plugins {
    id 'com.bmuschko.docker-spring-boot-application' version '9.4.0'
}

group = 'com.pbear'

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'com.bmuschko.docker-spring-boot-application'

    sourceCompatibility = 17
    targetCompatibility = 17

    dependencies {
        if (project.name != 'pbear-spring') {
            if (project.name != 'pbear-devtool') {
                compileOnly project(':pbear-spring:pbear-devtool')
                annotationProcessor project(':pbear-spring:pbear-devtool')

                if (project.name != 'pbear-lib') {
                    implementation project(':pbear-spring:pbear-lib')
                }
            }
        }

        compileOnly 'org.projectlombok:lombok:1.18.28'
        annotationProcessor 'org.projectlombok:lombok:1.18.28'

        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    }

    repositories {
        mavenCentral()
    }

    docker {
        dockerCreateDockerfile.doFirst {
            def appConfig = new Yaml().load( project.file('src/main/resources/application.yml').newInputStream() )
            springBootApplication {
                baseImage = 'openjdk:17'
                ports = [appConfig.server.port, appConfig.server.port]
                images = ["${project.name}:${project.version}", "${project.name}:latest"]
                jvmArgs = ['-Dspring.profiles.active=release', '-Duser.timezone=Asia/Seoul', '-Xms512m', '-Xmx512m']
            }
        }
        dockerBuildImage.dependsOn('build')
    }
}